/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * principal.java
 *
 * Created on May 9, 2012, 9:23:07 AM
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.*;
//import compilador.*;

/**
 *
 * @author Maviel
 */
@SuppressWarnings("serial")
public class principal extends javax.swing.JFrame {
    String ArchivoAbierto;
    int opcion;
    /** Creates new form principal */
    public principal() {
        initComponents();
    }
   
    public void ImprimirError(String error){
        txt_errores.setText(txt_errores.getText()+"\n"+error);
    }
    
    public void AgregarTablaSimbolos(String simbolo){
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txt_entrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_errores = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_simbolos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mi_newFile = new javax.swing.JMenuItem();
        mi_openFile = new javax.swing.JMenuItem();
        mi_saveFile = new javax.swing.JMenuItem();
        runMenu = new javax.swing.JMenu();
        mi_compile = new javax.swing.JMenuItem();
        mi_run = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_entrada.setColumns(20);
        txt_entrada.setRows(5);
        jScrollPane1.setViewportView(txt_entrada);

        txt_errores.setBackground(new java.awt.Color(204, 204, 204));
        txt_errores.setColumns(20);
        txt_errores.setEditable(false);
        txt_errores.setRows(5);
        jScrollPane2.setViewportView(txt_errores);

        tabla_simbolos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "id", "tipo", "extra-tipo","ambito","offset"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false,false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla_simbolos);
        tabla_simbolos.getColumnModel().getColumn(0).setResizable(false);
        tabla_simbolos.getColumnModel().getColumn(1).setResizable(false);
        tabla_simbolos.getColumnModel().getColumn(2).setResizable(false);
        tabla_simbolos.getColumnModel().getColumn(3).setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Output");

        fileMenu.setText("File");

        mi_newFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide_visual/new_file.png"))); // NOI18N
        mi_newFile.setText("New File");
        mi_newFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_newFileActionPerformed(evt);
            }
        });
        fileMenu.add(mi_newFile);

        mi_openFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide_visual/folder_open.png"))); // NOI18N
        mi_openFile.setText("Open File");
        mi_openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_openFileActionPerformed(evt);
            }
        });
        fileMenu.add(mi_openFile);

        mi_saveFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ide_visual/save.png"))); // NOI18N
        mi_saveFile.setText("Save File");
        mi_saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_saveFileActionPerformed(evt);
            }
        });
        fileMenu.add(mi_saveFile);

        jMenuBar1.add(fileMenu);

        runMenu.setText("Run");

        mi_compile.setText("Compile");
        mi_compile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_compileActionPerformed(evt);
            }
        });
        runMenu.add(mi_compile);

        mi_run.setText("Run");
        runMenu.add(mi_run);

        jMenuBar1.add(runMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mi_newFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_newFileActionPerformed
        // TODO add your handling code here:
        opcion = 0;
        txt_entrada.setText("");
    }//GEN-LAST:event_mi_newFileActionPerformed

    private void mi_openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_openFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        String texto;
        int seleccion = fileChooser.showOpenDialog(txt_entrada);
        File archivo = fileChooser.getSelectedFile();
        opcion = 1;
        texto = archivo.getAbsolutePath();
        ArchivoAbierto = texto;
        StringBuffer contenido = new StringBuffer ();
        BufferedReader br = null;
        try {
                 br = new BufferedReader (new FileReader(new File (archivo.getAbsolutePath())));
                String linea;
                while (( linea = br.readLine()) != null){
                        //System.out.println(linea);
                        txt_entrada.setText(txt_entrada.getText()+"\n"+linea);
                        contenido.append(linea);
                        contenido.append(System.getProperty("line.separator"));
                }
        } catch (Exception e) {
                System.out.println("Excepcion â€“ " + e.toString());
        } finally {
                if (br!= null) {
                try {
                    br.close();
                } catch (IOException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                }

        }
        
    }//GEN-LAST:event_mi_openFileActionPerformed

    private void mi_saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_saveFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir"));  
        int returnVal = fileChooser.showSaveDialog(null);
        
    }//GEN-LAST:event_mi_saveFileActionPerformed

    private void mi_compileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_compileActionPerformed
        // TODO add your handling code here:
        String[] file = new String[1];
        file[0]=this.ArchivoAbierto;
        if(opcion==1){
            Main compi = new Main();
            try {
                compi.compilar(file);
                txt_errores.setText( compi.errores() );
                String tabla = compi.tabla_info();
            DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "id", "tipo", "extra-tipo","ambito","offset"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false,false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

             for(String s:tabla.split("\n")){
                    String[] fila = s.split(";");
                    model.insertRow(0,fila) ; }
             
            tabla_simbolos.setModel(model);
                     
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mi_compileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem mi_compile;
    private javax.swing.JMenuItem mi_newFile;
    private javax.swing.JMenuItem mi_openFile;
    private javax.swing.JMenuItem mi_run;
    private javax.swing.JMenuItem mi_saveFile;
    private javax.swing.JMenu runMenu;
    private javax.swing.JTable tabla_simbolos;
    private javax.swing.JTextArea txt_entrada;
    private javax.swing.JTextArea txt_errores;
    // End of variables declaration//GEN-END:variables
}
